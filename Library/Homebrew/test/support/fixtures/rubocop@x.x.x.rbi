# typed: strict

# This file is autogenerated. Do not edit it by hand.
# To regenerate, run `brew typecheck --update rubocop`.

class Parser::Source::Comment
  include ::RuboCop::Ext::Comment
end

class Parser::Source::Range
  include ::RuboCop::Ext::Range
end

RuboCop::CLI::STATUS_OFFENSES = T.let(T.unsafe(nil), Integer)

RuboCop::CLI::STATUS_SUCCESS = T.let(T.unsafe(nil), Integer)

RuboCop::CommentConfig::CONFIG_DISABLED_LINE_RANGE_MIN = T.let(T.unsafe(nil), Float)

class RuboCop::Config
  include ::RuboCop::PathUtil
  include ::RuboCop::FileFinder
  extend ::RuboCop::SimpleForwardable

  # @return [Config] a new instance of Config
  #
  # source://rubocop//lib/rubocop/config.rb#31
  def initialize(hash = T.unsafe(nil), loaded_path = T.unsafe(nil)); end

  # source://rubocop-ast/1.44.1/lib/rubocop/ast/utilities/simple_forwardable.rb#19
  def [](*_arg0, **_arg1, &_arg2); end
end

RuboCop::Token = RuboCop::AST::Token

class RuboCop::Cop::Base
  include ::RuboCop::AST::Sexp
  include ::RuboCop::PathUtil
  include ::RuboCop::Cop::Util
  include ::RuboCop::Cop::IgnoredNode
  include ::RuboCop::Cop::AutocorrectLogic
  extend ::RuboCop::AST::Sexp
  extend ::RuboCop::AST::NodePattern::Macros
  extend ::RuboCop::ExcludeLimit

  # @return [Base] a new instance of Base
  #
  # source://rubocop//lib/rubocop/cop/base.rb#156
  def initialize(config = T.unsafe(nil), options = T.unsafe(nil)); end
end

class RuboCop::Cop::SomeUnusedCop < RuboCop::Cop::Base
  def on_send(_node); end
end

module RuboCop::Cop::UnusedModule; end

class CompletelyUnrelated
  def bananas; end
end

module RuboCop::Version
  class << self
    # @api private
    #
    # source://rubocop//lib/rubocop/version.rb#121
    def config_for_pwd(env); end

    # @api private
    #
    # source://rubocop//lib/rubocop/version.rb#151
    def document_version; end
  end
end

VERSION = "x.x.x"

SOME_CONSTANT = "some constant value"
